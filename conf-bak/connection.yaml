#
# Copyright SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
#
# The network connection profile provides client applications the information about the target
# blockchain network that are necessary for the applications to interact with it. These are all
# knowledge that must be acquired from out-of-band sources. This file provides such a source.
#

# copied from fabric-sdk-go/test/fixtures/config/config_e2e_pkcs11.yaml

#
# Schema version of the content. Used by the SDK to apply the corresponding parsing rules.
#
version: 1.0.0

#
# The client section used by GO SDK.
#
client:
  # Which organization does this application instance belong to? The value must be the name of an org
  # defined under "organizations"
  organization: Org1
  logging:
    # Develope can using debug to get more information
    #    level: debug
    level: info
  cryptoconfig:
    path: ./conf/crypto-config
  # Some SDKs support pluggable KV stores, the properties under "credentialStore"
  # are implementation specific
  credentialStore:
    # [Optional]. Used by user store. Not needed if all credentials are embedded in configuration
    # and enrollments are performed elswhere.
    path: "./conf/keystore/hfc-kvs"

    cryptoStore:
      # Specific to the underlying KeyValueStore that backs the crypto key store.
      path: "/conf/keystore/hfc-msp"



  # [Optional] BCCSP config for the client. Used by GO SDK.
  BCCSP:
    security:
      enabled: true
      default:
        provider: "SW"
      hashAlgorithm: "SHA2"
      softVerify: true
      level: 256

  tlsCerts:
    # [Optional]. Use system certificate pool when connecting to peers, orderers (for negotiating TLS) Default: false
    systemCertPool: true
    # [Optional]. Client key and cert for TLS handshake with peers and orderers
    client:
      # 使用byfn中User1@org1的证书
      keyfile: ./conf/crypto-config/peerOrganizations/org1.lzawt.com/users/User1@org1.lzawt.com/tls/client.key
      certfile: ./conf/crypto-config/peerOrganizations/org1.lzawt.com/users/User1@org1.lzawt.com/tls/client.cert


################################## General part ##################################


#
# [Optional]. But most apps would have this section so that channel objects can be constructed
# based on the content below. If an app is creating channels, then it likely will not need this
# section.
#
channels:
  # name of the channel
  mychannel:
    # Required. list of orderers designated by the application to use for transactions on this
    # channel. This list can be a result of access control ("org1" can only access "ordererA"), or
    # operational decisions to share loads from applications among the orderers.  The values must
    # be "names" of orgs defined under "organizations/peers"
    # deprecated: not recommended, to override any orderer configuration items, entity matchers should be used.
    #    orderers:
    #      - orderer.lzawt.com

    # 不要缺少当前channel的orderer节点
    orderers:
      - orderer1.lzawt.com

    # Required. list of peers from participating orgs
    peers:
      peer0.org1.lzawt.com:
        # [Optional]. will this peer be sent transaction proposals for endorsement? The peer must
        # have the chaincode installed. The app can also use this property to decide which peers
        # to send the chaincode install request. Default: true
        endorsingPeer: true

        # [Optional]. will this peer be sent query proposals? The peer must have the chaincode
        # installed. The app can also use this property to decide which peers to send the
        # chaincode install request. Default: true
        chaincodeQuery: true

        # [Optional]. will this peer be sent query proposals that do not require chaincodes, like
        # queryBlock(), queryTransaction(), etc. Default: true
        ledgerQuery: true

        # [Optional]. will this peer be the target of the SDK's listener registration? All peers can
        # produce events but the app typically only needs to connect to one to listen to events.
        # Default: true
        eventSource: true

      # Add other peers in mychannel for byfn
      peer1.org1.lzawt.com:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true

      peer0.org2.lzawt.com:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true

      peer1.org2.lzawt.com:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true

    # [Optional]. The application can use these options to perform channel operations like retrieving channel
    # config etc.
    policies:
      #[Optional] options for retrieving channel configuration blocks
      queryChannelConfig:
        #[Optional] min number of success responses (from targets/peers)
        minResponses: 1
        #[Optional] channel config will be retrieved for these number of random targets
        maxTargets: 1
        #[Optional] retry options for query config block
        retryOpts:
          #[Optional] number of retry attempts
          attempts: 5
          #[Optional] the back off interval for the first retry attempt
          initialBackoff: 500ms
          #[Optional] the maximum back off interval for any retry attempt
          maxBackoff: 5s
          #[Optional] he factor by which the initial back off period is exponentially incremented
          backoffFactor: 2.0

#
# list of participating organizations in this network
#
organizations:
  Org1:
    mspid: Org1MSP
    users:
      AdminOrg1:
        key:
          pem: |
            -----BEGIN PRIVATE KEY-----
            MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQguxGVjrCCM3saGv5R
            aLSvhxyS5adQJNCpvURE8BYENuahRANCAAQb/uF8T8FhbZynXulIHybNh5fZqZ7n
            JpQZAczAZxwX1vhKVXeebumUzxugrDD5+XZiVuc9JPaEEND/3NK/dT9o
            -----END PRIVATE KEY-----

        cert:
          pem: |
            -----BEGIN CERTIFICATE-----
            MIICIjCCAcmgAwIBAgIQGJDL6yDQYpz59TZs+t0NyTAKBggqhkjOPQQDAjBvMQsw
            CQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2FuIEZy
            YW5jaXNjbzEXMBUGA1UEChMOb3JnMS5semF3dC5jb20xGjAYBgNVBAMTEWNhLm9y
            ZzEubHphd3QuY29tMB4XDTIwMDUxNDAyNTQwMFoXDTMwMDUxMjAyNTQwMFowaTEL
            MAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG
            cmFuY2lzY28xDjAMBgNVBAsTBWFkbWluMR0wGwYDVQQDDBRBZG1pbkBvcmcxLmx6
            YXd0LmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABBv+4XxPwWFtnKde6Ugf
            Js2Hl9mpnucmlBkBzMBnHBfW+EpVd55u6ZTPG6CsMPn5dmJW5z0k9oQQ0P/c0r91
            P2ijTTBLMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8EAjAAMCsGA1UdIwQkMCKA
            IGHNMiIdGJYSmpSdDEEobIR41YnhEv2Vm6kVy8GLIOzrMAoGCCqGSM49BAMCA0cA
            MEQCIEq/qDNT7mKK7j19HneQwKHjk2tmI2divN+RFxHcGUR/AiAgTuZcSiyHZML8
            h4I5+n220OGMCqZDtjpVYWNawAl+xQ==
            -----END CERTIFICATE-----


    # set msp files path
    cryptoPath: ./conf/crypto-config/peerOrganizations/org1.lzawt.com/users/{username}@org1.lzawt.com/msp

    # Add peers for org1
    peers:
      - peer0.org1.lzawt.com
      - peer1.org1.lzawt.com


  # the profile will contain public information about organizations other than the one it belongs to.
  # These are necessary information to make transaction lifecycles work, including MSP IDs and
  # peers with a public URL to send transaction proposals. The file will not contain private
  # information reserved for members of the organization, such as admin key and certificate,
  # fabric-ca registrar enroll ID and secret, etc.
  Org2:
    mspid: Org2MSP
    cryptoPath: ./conf/crypto-config/peerOrganizations/org2.lzawt.com/users/{username}@org2.lzawt.com/msp

    # Add peers for org2
    peers:
      - peer0.org2.lzawt.com


  # Orderer Org name
  ordererorg:
    # Membership Service Provider ID for this organization
    mspID: OrdererMSP
    cryptoPath: ./conf/crypto-config/ordererOrganizations/lzawt.com/users/Admin@lzawt.com/msp


#
# List of orderers to send transaction and channel create/update requests to. For the time
# being only one orderer is needed. If more than one is defined, which one get used by the
# SDK is implementation specific. Consult each SDK's documentation for its handling of orderers.
#
orderers:
  orderer1.lzawt.com:
    # [Optional] Default: Infer from hostname
    url: grpcs://1.71.143.57:7050

    # these are standard properties defined by the gRPC library
    # they will be passed in as-is to gRPC client constructor
    #TODO to be moved to high level, common for all grpc connections
    grpcOptions:
      ssl-target-name-override: orderer.lzawt.com
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false

      #will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false

    tlsCACerts:
      # Certificate location absolute path
      # Replace to orderer cert path
      path: ./conf/crypto-config/ordererOrganizations/lzawt.com/tlsca/tlsca.lzawt.com-cert.pem

#
# List of peers to send various requests to, including endorsement, query
# and event listener registration.
#
peers:
  peer0.org1.lzawt.com:
    # this URL is used to send endorsement and query requests
    # [Optional] Default: Infer from hostname
    # 表明使用grpcs协议，设置IP和端口号，使用域名会无法连接
    # url: grpcs://peer0.org1.lzawt.com:7051
    url: grpcs://1.71.143.57:7051

    #TODO to be moved to high level, common for all grpc connections
    grpcOptions:
      ssl-target-name-override: peer0.org1.lzawt.com
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false

      #will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false

    tlsCACerts:
      # Certificate location absolute path
      path: ./conf/crypto-config/peerOrganizations/org1.lzawt.com/tlsca/tlsca.org1.lzawt.com-cert.pem

  peer1.org1.lzawt.com:
    # this URL is used to send endorsement and query requests
    # [Optional] Default: Infer from hostname
    # 表明使用grpcs协议，设置IP和端口号，使用域名会无法连接
    # url: grpcs://peer0.org1.lzawt.com:7051
    url: grpcs://1.71.141.197:7051

    #TODO to be moved to high level, common for all grpc connections
    grpcOptions:
      ssl-target-name-override: peer0.org1.lzawt.com
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false

      #will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false

    tlsCACerts:
      # Certificate location absolute path
      path: ./conf/crypto-config/peerOrganizations/org1.lzawt.com/tlsca/tlsca.org1.lzawt.com-cert.pem

  peer0.org2.lzawt.com:
    # Replace the port
    url: grpcs://1.71.135.106:7051
    grpcOptions:
      ssl-target-name-override: peer0.org2.lzawt.com
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false

      #will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false
    tlsCACerts:
      path: ./conf/crypto-config/peerOrganizations/org2.lzawt.com/tlsca/tlsca.org2.lzawt.com-cert.pem