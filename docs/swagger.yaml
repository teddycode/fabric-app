basePath: /
definitions:
  schema.AuthSwag:
    properties:
      password:
        description: 登录密码
        example: "1234"
        type: string
      user_name:
        description: 登录邮箱
        example: teddy
        type: string
    type: object
  schema.BCPic:
    properties:
      name:
        description: 图片文件名（也是脸上哈希）
        example: b9c52e66c1ebfc826e324a394a106f9dc9550fed4390808b2d8932ff91c92b5a
        type: string
      point:
        description: 采集点
        example: "19372180"
        type: string
      size:
        description: 图片大小
        example: "102400"
        type: string
      type:
        description: '来源 0: sensor, 1:pic,'
        example: sensor
        type: string
    type: object
  schema.BCSensor:
    properties:
      point:
        description: 采集点
        example: "19372180"
        type: string
      type:
        description: 传感器参数类型
        example: temperature
        type: string
      unit:
        description: 单位
        example: ℃
        type: string
      value:
        description: 参数数值
        example: "26.3"
        type: string
    type: object
  schema.CheckPic:
    properties:
      date:
        example: "2020-07-13"
        type: string
      hash:
        example: d8963f1db11e7ca690f159b7e8173205854d7914aba7b47ede48684175b8bc39
        type: string
      point:
        example: 0018DE743E31
        type: string
    type: object
  schema.CurrentUserSwag:
    properties:
      address:
        example: 广州市白云区xx路2号
        type: string
      email:
        description: 用户名
        example: 123456@qq.com
        type: string
      phone:
        description: 电话
        example: "18677337725"
        type: string
    type: object
  schema.FarmRecordSwag:
    properties:
      end_time:
        example: "1594382165"
        type: string
      info:
        example: 撒了点肥料
        type: string
      oper_name:
        example: 施肥
        type: string
      oper_type:
        example: 施肥
        type: string
      start_time:
        example: "1594382265"
        type: string
    type: object
  schema.FarmSwag:
    properties:
      end_time:
        example: "9999999999"
        type: string
      point:
        example: teddy
        type: string
      star_time:
        example: "1594382265"
        type: string
    type: object
  schema.PasswordSwag:
    properties:
      new_password:
        description: 新密码
        example: "123456"
        type: string
      old_password:
        description: 旧密码
        example: "1234"
        type: string
    type: object
  schema.PicSwag:
    properties:
      end_time:
        example: "1595382265"
        type: string
      point:
        example: 0018DE743E31
        type: string
      star_time:
        example: "1594382265"
        type: string
    type: object
  schema.QueryTransNumSwag:
    properties:
      type:
        example: 1
        type: integer
    required:
    - type
    type: object
  schema.RegSwag:
    properties:
      identity:
        description: identity
        example: "4522261111111111"
        type: string
      password:
        description: 密码
        example: "1234"
        type: string
      username:
        description: 用户名
        example: teddy
        type: string
    required:
    - identity
    - password
    - username
    type: object
  schema.RevokeSwag:
    properties:
      identity:
        example: "4522261111111111"
        type: string
      user_name:
        example: teddy
        type: string
    type: object
  schema.SensorSwag:
    properties:
      end_time:
        example: "1595382265"
        type: string
      point:
        example: 0018DE743E31
        type: string
      star_time:
        example: "1594382265"
        type: string
    type: object
  schema.VerifySwag:
    properties:
      hash:
        description: 脸上哈希
        example: b9c52e66c1ebfc826e324a394a106f9dc9550fed4390808b2d8932ff91c92b5a
        type: string
    type: object
host: 202.193.60.108:8000
info:
  contact: {}
  description: trace
  license: {}
  title: fabirc bcs API
  version: "1.0"
paths:
  /api/v1/bcs/info:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: 获取区块链状态信息
      tags:
      - 区块链监控
  /api/v1/bcs/peers:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: 查询所有节点信息
      tags:
      - 区块链监控
  /api/v1/bcs/points:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: 查询所有采集点及其信息数量
      tags:
      - 区块链监控
  /api/v1/bcs/transactions:
    post:
      consumes:
      - application/json
      parameters:
      - description: 1:按天 2:按周 3:按月 4:按年
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.QueryTransNumSwag'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: 条件查询交易数
      tags:
      - 区块链监控
  /api/v1/trace/check:
    post:
      consumes:
      - application/json
      parameters:
      - description: test
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.CheckPic'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: 图片哈希校验
      tags:
      - 溯源查询
  /api/v1/trace/farmData:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.FarmSwag'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: 农事数据溯源
      tags:
      - 溯源查询
  /api/v1/trace/picture:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.PicSwag'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: 图片信息溯源
      tags:
      - 溯源查询
  /api/v1/trace/sensor:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.SensorSwag'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: 传感器数据溯源
      tags:
      - 溯源查询
  /api/v1/trace/upload/pic:
    post:
      consumes:
      - application/json
      parameters:
      - description: 返回交易哈希
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.BCPic'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 图片信息上链接口
      tags:
      - 溯源查询
  /api/v1/trace/upload/sensor:
    post:
      consumes:
      - application/json
      parameters:
      - description: 返回交易哈希
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.BCSensor'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 传感器数据上链接口
      tags:
      - 溯源查询
  /api/v1/trace/verify:
    post:
      consumes:
      - application/json
      parameters:
      - description: 输入交易哈希，返回交易内容（包含文件内容哈希值）
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schema.VerifySwag'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: 链上信息检验
      tags:
      - 溯源查询
  /api/v1/user/current:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取登录用户信息
      tags:
      - 用户管理
  /api/v1/user/getHeader:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用户头像获取
      tags:
      - 用户管理
  /api/v1/user/getRecords:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用户记录数查询
      tags:
      - 用户管理
  /api/v1/user/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户名、密码
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/schema.AuthSwag'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: 用户登录
      tags:
      - 用户管理
  /api/v1/user/logout:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用户登出
      tags:
      - 用户管理
  /api/v1/user/operType:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用户查询农事数据类型
      tags:
      - 用户管理
  /api/v1/user/password:
    post:
      consumes:
      - application/json
      parameters:
      - description: 旧密码、新密码
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/schema.PasswordSwag'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 修改用户密码
      tags:
      - 用户管理
  /api/v1/user/record:
    post:
      consumes:
      - application/json
      parameters:
      - description: 农事记录上传
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/schema.FarmRecordSwag'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用户记录上传
      tags:
      - 用户管理
  /api/v1/user/refresh:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 刷新token
      tags:
      - 用户管理
  /api/v1/user/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户名、身份证号、密码
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/schema.RegSwag'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: 注册用户
      tags:
      - 用户管理
  /api/v1/user/revoke:
    post:
      consumes:
      - application/json
      parameters:
      - description: 注销
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/schema.RevokeSwag'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: 用户注销
      tags:
      - 用户管理
  /api/v1/user/setHeader:
    post:
      consumes:
      - multipart/form-data
      description: upload file
      parameters:
      - description: 用户头像
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用户更换头像
      tags:
      - 用户管理
  /api/v1/user/update:
    post:
      consumes:
      - application/json
      parameters:
      - description: 字段更新
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/schema.CurrentUserSwag'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 修改登录用户信息
      tags:
      - 用户管理
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
